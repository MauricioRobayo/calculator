{"version":3,"sources":["components/Display.js","components/Button.js","components/ButtonPanel.js","logic/operate.js","logic/calculate.js","components/App.js","index.js"],"names":["Display","result","className","defaultProps","Button","name","color","wide","handleClick","onClick","type","style","backgroundColor","flexBasis","ButtonPanel","coloredBtns","Object","entries","first","secont","third","fourth","fifth","map","key","panel","btnName","includes","operations","a","b","eq","NaN","div","times","minus","plus","operate","num1","num2","operation","Big","isNumber","value","Number","isNaN","parseFloat","calculate","buttonName","total","next","modifiers","operator","App","props","state","setState","allClear","buildNumber","this","appendValue","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9d06934.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Display = ({ result }) => <div className=\"display\">{result}</div>\n\nDisplay.propTypes = {\n  result: PropTypes.string,\n}\n\nDisplay.defaultProps = {\n  result: '0',\n}\n\nexport default Display\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Button = ({ name, color, wide, handleClick }) => (\n  <button\n    onClick={() => handleClick(name)}\n    type=\"button\"\n    style={{\n      backgroundColor: color ? 'orange' : 'lightgray',\n      flexBasis: wide ? '50%' : '25%',\n    }}\n  >\n    {name}\n  </button>\n)\n\nButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.bool.isRequired,\n  wide: PropTypes.bool,\n}\n\nButton.defaultProps = {\n  wide: false,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport Button from './Button'\n\nconst ButtonPanel = ({ handleClick }) => {\n  const coloredBtns = ['/', '*', '-', '+', '=']\n\n  const panels = {\n    first: ['AC', '+/-', '%', '/'],\n    secont: ['7', '8', '9', '*'],\n    third: ['4', '5', '6', '-'],\n    fourth: ['1', '2', '3', '+'],\n    fifth: ['0', '.', '='],\n  }\n\n  return (\n    <>\n      {Object.entries(panels).map(([key, panel]) => (\n        <div key={key} className=\"button-panel\">\n          {panel.map(btnName => (\n            <Button\n              key={btnName}\n              name={btnName}\n              color={coloredBtns.includes(btnName)}\n              handleClick={handleClick}\n              wide={btnName === '0'}\n            />\n          ))}\n        </div>\n      ))}\n    </>\n  )\n}\n\nButtonPanel.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n}\n\nexport default ButtonPanel\n","import Big from 'big.js/big'\n\nconst operations = {\n  '/': (a, b) => (b.eq(0) ? NaN : a.div(b)),\n  '*': (a, b) => a.times(b),\n  '-': (a, b) => a.minus(b),\n  '+': (a, b) => a.plus(b),\n}\n\nconst operate = (num1, num2, operation) =>\n  operations[operation](Big(num1), Big(num2))\n\nexport default operate\n","import operate from './operate'\n\nconst isNumber = value => !Number.isNaN(parseFloat(value))\n\nconst operator = (buttonName, { total, next, operation }) => {\n  if (!isNumber(next) && !isNumber(total)) {\n    return {}\n  }\n\n  if (!isNumber(next) && total) {\n    return {\n      operation: buttonName,\n    }\n  }\n\n  if (next && !isNumber(total)) {\n    return {\n      operation: buttonName,\n      total: next,\n      next: null,\n    }\n  }\n\n  return {\n    total: operate(total, next, operation),\n    next: null,\n    operation: buttonName === '=' ? operation : buttonName,\n  }\n}\n\nconst calculate = (buttonName, { total, next, operation }) => {\n  const modifiers = {\n    '+/-': {\n      total: total * -1,\n      next: next * -1,\n    },\n    '%': {\n      next: next ? next / 100 : next,\n    },\n  }\n  if (modifiers[buttonName]) {\n    return modifiers[buttonName]\n  }\n\n  if (['*', '/', '+', '-', '='].includes(buttonName)) {\n    return operator(buttonName, { total, next, operation })\n  }\n  return {}\n}\n\nexport { calculate, isNumber }\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport Display from './Display'\nimport ButtonPanel from './ButtonPanel'\nimport { calculate, isNumber } from '../logic/calculate' // eslint-disable-line\nimport './App.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      total: null,\n      next: null,\n      operation: null,\n    }\n  }\n\n  handleClick = buttonName => {\n    const { total, next } = this.state\n    if (next === null && buttonName === '=') {\n      this.setState({ next: total })\n    }\n\n    this.allClear(buttonName)\n    this.buildNumber(buttonName)\n    this.setState(state => calculate(buttonName, state))\n  }\n\n  allClear(buttonName) {\n    const { total } = this.state\n    if (total === 'NaN' || buttonName === 'AC') {\n      this.setState({ total: null, next: null, operation: null })\n    }\n  }\n\n  buildNumber(value) {\n    if (isNumber(value) || value === '.') {\n      this.setState({\n        next: this.appendValue(value),\n      })\n    }\n  }\n\n  appendValue(value) {\n    const { next } = this.state\n    if (next === null) {\n      return value\n    }\n\n    if (Number.isNaN(Number(next + value))) {\n      return next\n    }\n    return `${next + value}`\n  }\n\n  render() {\n    const { total, next } = this.state\n    return (\n      <div className=\"app\">\n        <Display result={`${next || total || 0}`} />\n        <ButtonPanel handleClick={this.handleClick} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
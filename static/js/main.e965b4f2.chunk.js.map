{"version":3,"sources":["components/Display.js","components/Button.js","components/ButtonPanel.js","logic/operate.js","logic/calculate.js","components/App.js","index.js"],"names":["Display","result","className","defaultProps","Button","name","color","wide","handleClick","onClick","type","style","backgroundColor","flexBasis","ButtonPanel","coloredBtns","Object","entries","first","secont","third","fourth","fifth","map","key","panel","btnName","includes","operations","a","b","eq","NaN","div","times","minus","plus","operate","num1","num2","operation","Big","isNumber","value","Number","isNaN","parseFloat","calculate","buttonName","total","next","modifiers","operator","App","useState","setTotal","setNext","setOperation","currValue","currTotal","currNext","newNext","newTotal","newOperation","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e965b4f2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Display = ({ result }) => <div className=\"display\">{result}</div>;\n\nDisplay.propTypes = {\n  result: PropTypes.string,\n};\n\nDisplay.defaultProps = {\n  result: '0',\n};\n\nexport default Display;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ name, color, wide, handleClick }) => (\n  <button\n    onClick={() => {\n      return handleClick(name);\n    }}\n    type=\"button\"\n    style={{\n      backgroundColor: color ? 'orange' : 'lightgray',\n      flexBasis: wide ? '50%' : '25%',\n    }}\n  >\n    {name}\n  </button>\n);\n\nButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.bool.isRequired,\n  wide: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  wide: false,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from './Button';\n\nconst ButtonPanel = ({ handleClick }) => {\n  const coloredBtns = ['/', '*', '-', '+', '='];\n\n  const panels = {\n    first: ['AC', '+/-', '%', '/'],\n    secont: ['7', '8', '9', '*'],\n    third: ['4', '5', '6', '-'],\n    fourth: ['1', '2', '3', '+'],\n    fifth: ['0', '.', '='],\n  };\n\n  return (\n    <>\n      {Object.entries(panels).map(([key, panel]) => (\n        <div key={key} className=\"button-panel\">\n          {panel.map((btnName) => (\n            <Button\n              key={btnName}\n              name={btnName}\n              color={coloredBtns.includes(btnName)}\n              handleClick={handleClick}\n              wide={btnName === '0'}\n            />\n          ))}\n        </div>\n      ))}\n    </>\n  );\n};\n\nButtonPanel.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonPanel;\n","import Big from 'big.js/big';\n\nconst operations = {\n  '/': (a, b) => (b.eq(0) ? NaN : a.div(b)),\n  '*': (a, b) => a.times(b),\n  '-': (a, b) => a.minus(b),\n  '+': (a, b) => a.plus(b),\n};\n\nconst operate = (num1, num2, operation) =>\n  operations[operation](Big(num1), Big(num2));\n\nexport default operate;\n","import operate from './operate';\n\nconst isNumber = (value) => !Number.isNaN(parseFloat(value));\n\nconst operator = (buttonName, { total, next, operation }) => {\n  if (!isNumber(next) && total) {\n    return {\n      operation: buttonName === '=' ? operation : buttonName,\n    };\n  }\n\n  if (next && !isNumber(total)) {\n    return {\n      operation: buttonName === '=' ? operation : buttonName,\n      total: next,\n      next: null,\n    };\n  }\n\n  if (isNumber(next) && isNumber(total) && operation) {\n    return {\n      total: operate(total, next, operation),\n      next: null,\n      operation: buttonName === '=' ? operation : buttonName,\n    };\n  }\n  return {};\n};\n\nconst calculate = (buttonName, { total, next, operation }) => {\n  const modifiers = {\n    '+/-': {\n      total: total * -1,\n      next: next * -1,\n    },\n    '%': {\n      next: next ? next / 100 : next,\n    },\n  };\n  if (modifiers[buttonName]) {\n    return modifiers[buttonName];\n  }\n\n  if (['*', '/', '+', '-', '='].includes(buttonName)) {\n    return operator(buttonName, { total, next, operation });\n  }\n  return {total, next, operation};\n};\n\nexport { calculate, isNumber };\n","import React, { useState } from 'react';\nimport Display from './Display';\nimport ButtonPanel from './ButtonPanel';\nimport { calculate, isNumber } from '../logic/calculate';\nimport './App.css';\n\nconst App = () => {\n  const [total, setTotal] = useState(null);\n  const [next, setNext] = useState(null);\n  const [operation, setOperation] = useState(null);\n\n  function appendValue(value, currValue) {\n    if (currValue === null) {\n      return value;\n    }\n\n    if (Number.isNaN(Number(currValue + value))) {\n      return currValue;\n    }\n    return `${currValue + value}`;\n  }\n\n  function handleClick(buttonName) {\n    let currTotal = total;\n    let currNext = next;\n\n    if (currNext === null && buttonName === '=') {\n      currTotal = total;\n    }\n\n    if (currTotal === 'NaN' || buttonName === 'AC') {\n      setTotal(null);\n      setNext(null);\n      setOperation(null);\n    }\n\n    if (isNumber(buttonName) || buttonName === '.') {\n      currNext = appendValue(buttonName, currNext)\n    }\n\n    const {\n      next: newNext,\n      total: newTotal,\n      operation: newOperation,\n    } = calculate(buttonName, { total: currTotal, next: currNext, operation });\n    setNext(newNext);\n    setTotal(newTotal);\n    setOperation(newOperation);\n  }\n\n  return (\n    <div className=\"app\">\n      <Display result={`${next || total || 0}`} />\n      <ButtonPanel handleClick={handleClick} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}